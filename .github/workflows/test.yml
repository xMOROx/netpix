name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize ]

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    name: Test Package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package: [client, common]
        include:
          - package: client
            path: ./client
          - package: common
            path: ./common
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Install libpcap
        run: sudo apt-get install libpcap-dev
      
      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin
      
      - name: Run tests with coverage
        working-directory: ${{ matrix.path }}
        run: |
          cargo tarpaulin --out Xml --output-dir coverage
      
      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          files: ${{ matrix.path }}/coverage/cobertura.xml
          flags: ${{ matrix.package }}
          fail_ci_if_error: false
      
      - name: Store test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.package }}
          path: ${{ matrix.path }}/target/debug/deps/*.stdout
          retention-days: 7
      
      - name: Report failure
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `‚ùå ${process.env.PACKAGE} package tests failed. [View logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})`
            })
        env:
          PACKAGE: ${{ matrix.package }}
