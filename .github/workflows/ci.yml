name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ opened, synchronize ]

jobs:
  formatting:
    name: Formatting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: [., ./client, ./common]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Check formatting
        run: cargo fmt --check --manifest-path ${{ matrix.dir }}/Cargo.toml

  build:
    name: Build
    needs: formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown
      
      - name: Generate lockfile hash
        run: echo "${{ hashFiles('**/Cargo.lock') }}"
        id: lockfile
      
      - name: Restore build cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: build-${{ runner.os }}-${{ steps.lockfile.outputs.hash }}
          restore-keys: |
            build-${{ runner.os }}-
      
      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-rust-${{ hashFiles('**/Cargo.lock') }}
      
      - name: Cache trunk
        uses: actions/cache@v3
        with:
          path: ~/.cargo/bin/trunk
          key: ${{ runner.os }}-trunk-0.18
      
      - uses: cargo-bins/cargo-binstall@main
      - name: Install dependencies
        run: |
          sudo apt-get install libpcap-dev
          cargo binstall --no-confirm --version ~0.18 trunk
      
      - name: Build client
        working-directory: ./client
        run: trunk build --release --dist ../dist
      
      - name: Build binary
        run: cargo install --locked --path .
      
      - name: Store WASM artifacts
        uses: actions/upload-artifact@v3
        with:
          name: wasm-build
          path: dist
          retention-days: 7
      
      - name: Store binary artifacts
        uses: actions/upload-artifact@v3
        with:
          name: rtpeeker-binary
          path: target/release/rtpeeker
          retention-days: 7
